#
#  TOPPERS/HRP Kernel
#      Toyohashi Open Platform for Embedded Real-Time Systems/
#      High Reliable system Profile Kernel
# 
#  Copyright (C) 2012 by Embedded and Real-Time Systems Laboratory
#              Graduate School of Information Science, Nagoya Univ., JAPAN
# 
#  上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#  ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#  変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#      スコード中に含まれていること．
#  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#      の無保証規定を掲載すること．
#  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#      と．
#    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#        作権表示，この利用条件および下記の無保証規定を掲載すること．
#    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#        報告すること．
#  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#      また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#      由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#      免責すること．
# 
#  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#  よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#  に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#  アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#  の責任を負わない．
# 
# 

#
#		Makefile のターゲット依存部（STM32-P207用）
#

#
#  ボード名, チップ名，コア名，開発環境名の定義
#
BOARD = stm32p207
CHIP  = stm32f
PRC   = arm_m
TOOL  = gcc

#
#  デバッグ時にRAM上で実行する場合はtrueに定義
#
#USE_RAM_DEBUG  = true

#
#  パス3でメモリの再配置をする
#
MEMORY_REMAP_PASS3 = true

#
#  GNU開発環境のターゲットアーキテクチャの定義
#
GCC_TARGET = arm-none-eabi

#
#  コンパイルオプション
#
INCLUDES := $(INCLUDES) -I$(TARGETDIR)
COPTS := $(COPTS) -mthumb-interwork
LDFLAGS := -nostdlib $(LDFLAGS)



#
#  カーネルに関する定義
#
KERNEL_DIR := $(KERNEL_DIR) $(TARGETDIR)
KERNEL_ASMOBJS := $(KERNEL_ASMOBJS) target_support.o 
KERNEL_COBJS := $(KERNEL_COBJS) target_config.o target_timer.o
KERNEL_CFLAGS := $(KERNEL_CFLAGS)

#
#  システムサービスに関する定義
#
SYSSVC_DIR := $(SYSSVC_DIR)
SYSSVC_COBJS := $(SYSSVC_COBJS) usart.o

#
#  リンカスクリプトの定義
#
ifeq ($(USE_RAM_DEBUG),true)
  COPTS := $(COPTS) -DTOPPERS_RAM_DEBUG
  CFG1_OUT_LDSCRIPT = $(SRCDIR)/target/$(BOARD)_$(TOOL)/stm32p207_ram.ld
else
  CFG1_OUT_LDSCRIPT = $(SRCDIR)/target/$(BOARD)_$(TOOL)/stm32p207_rom.ld
endif
# メモリ配置決定前の暫定的なリンカスクリプト
CFG2_OUT_LDSCRIPT = cfg2_out.ld
# メモリ配置決定時のリンカスクリプト
CFG3_OUT_LDSCRIPT = cfg3_out.ld
# 最終的なリンカスクリプト
LDSCRIPT = ldscript.ld
USE_CFG_PASS3 = true

$(LDSCRIPT): kernel_cfg.timestamp
$(CFG2_OUT_LDSCRIPT): kernel_cfg.timestamp

#
#  スタートアップモジュールに関する定義
#
#  stm32p207.ldに「STARTUP(start.o)」を記述したため，スタートアップモジュー
#  ルの名前をHIDDEN_OBJSに定義する．また，LDFLAGSに-nostdlibを追加している．
#
HIDDEN_OBJS = start.o

$(HIDDEN_OBJS): %.o: %.S
	$(CC) -c $(CFLAGS) $(KERNEL_CFLAGS) $<

$(HIDDEN_OBJS:.o=.d): %.d: %.S
	@$(PERL) $(SRCDIR)/utils/makedep -C $(CC) \
		-O "$(CFLAGS) $(KERNEL_CFLAGS)" $< >> Makefile.depend

LDFLAGS := -nostdlib $(LDFLAGS)

#
#  依存関係の定義
#
kernel_cfg.timestamp: $(TARGETDIR)/target.tf
$(OBJFILE): $(TARGETDIR)/target_mem.tf

#
#  コンフィギュレータ関係の変数の定義
#
CFG_TABS := $(CFG_TABS) --cfg1-def-table $(TARGETDIR)/target_def.csv
CFG1_OUT_LDFLAGS := $(LDFLAGS)
CFG2_OUT_LDFLAGS := $(LDFLAGS)

# 
#  オフセットファイル生成のための定義 
# 
OFFSET_TF := $(TARGETDIR)/target_offset.tf

#
#  チップ依存部のインクルード
#
include $(SRCDIR)/arch/$(PRC)_$(TOOL)/$(CHIP)/Makefile.chip
